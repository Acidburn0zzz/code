From: Tobias Richter <Tobias.Richter@diamond.ac.uk>
Date: Mon, 21 Jun 2010 10:55:21 +0100
Subject: add extra sanity checks

---
 bindings/java/org/nexusformat/NexusFile.java |   27 +++++++++++++++++++++++--
 1 files changed, 24 insertions(+), 3 deletions(-)

diff --git a/bindings/java/org/nexusformat/NexusFile.java b/bindings/java/org/nexusformat/NexusFile.java
index 18b74d0..928de16 100644
--- a/bindings/java/org/nexusformat/NexusFile.java
+++ b/bindings/java/org/nexusformat/NexusFile.java
@@ -300,7 +300,8 @@ public class  NexusFile implements NeXusFileInterface {
 			     NexusException {
         if(handle < 0) throw new NexusException("NAPI-ERROR: File not open");
         checkType(type);    
-        checkForNull(name);
+        checkForNull(name, rank, iChunk);
+        checkForNegInIntArray(true, dim, iChunk);
         switch(compression_type) {
 	case NexusFile.NX_COMP_NONE:
 	case NexusFile.NX_COMP_LZW:
@@ -309,7 +310,7 @@ public class  NexusFile implements NeXusFileInterface {
 	    throw new NexusException("Invalid compression code requested");
 
 	}
-	nxmakecompdata(handle,name,type,rank,dim,compression_type, iChunk);
+	nxmakecompdata(handle, name, type, rank, dim, compression_type, iChunk);
     }
 
     /**
@@ -330,7 +331,8 @@ public class  NexusFile implements NeXusFileInterface {
         if(handle < 0) throw new NexusException("NAPI-ERROR: File not open");
         checkType(type);
         checkForNull(name, dim);
-	nxmakedata(handle,name,type,rank,dim);
+        checkForNegInIntArray(true, dim);
+        nxmakedata(handle, name, type, rank, dim);
     }
     /**
       * opendata opens an existing dataset for access. For instance for 
@@ -432,6 +434,7 @@ public class  NexusFile implements NeXusFileInterface {
         byte bdata[];
         if(handle < 0) throw new NexusException("NAPI-ERROR: File not open");
     	checkForNull(start, size, array);
+    	checkForNegInIntArray(false, start, size);
         try{
 	    HDFArray ha = new HDFArray(array);
             bdata = ha.emptyBytes();
@@ -519,6 +522,7 @@ public class  NexusFile implements NeXusFileInterface {
 
        if(handle < 0) throw new NexusException("NAPI-ERROR: File not open");
        checkForNull(array, start, size);
+       checkForNegInIntArray(false, start,size);
        try{
            HDFArray ha =  new HDFArray(array);
            data = ha.byteify();
@@ -731,6 +735,23 @@ public class  NexusFile implements NeXusFileInterface {
     }
     
     /**
+     * checks if any of the ints in the arrays are negative, 
+     * throws appropriate runtime exception if so
+     * for some being zero is stupid, but hopefully not fatal
+     */
+    private void checkForNegInIntArray(boolean allowUnlimited, int[]... args) {
+    	boolean first=true;
+    	for (int[] array : args)
+    		for (int value: array) {
+    			if (value<0)
+    				if (value == this.NX_UNLIMITED && allowUnlimited && first) {
+    					// all ok this time
+    				} else
+    					throw new IllegalArgumentException("negative dimension received");
+    			first=false;
+    		}
+    }
+    /**
       * checkType verifies if a parameter is a valid NeXus type code. 
       * If not an exception is thrown.
       * @param type The type value to check.
-- 
