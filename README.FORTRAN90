The NeXus Fortran 90 interface consists of a single Fortran 90 module 
containing all the global parameters and function definitions. 
The routines are called exactly like their C counterparts, although some 
arguments have been made optional because their values can be determined
automatically.  See <http://www.neutron.anl.gov/NeXus/NeXus_F90.html> for details of the individual routines.

There must be a USE statement to incorporate the NeXus module e.g.

   use NXmodule
   
(N.B. if the F90 utility module NXUmodule is USEd, it is not necessary to specify NXmodule as well.)

The Fortran 90 interface uses two derived types for the NXhandle and NXLink
structures.

    type(NXhandle) :: file_id
    type(NXlink) :: link_id

There are also several KIND parameters defined for producing different-length storage.  They are not guaranteed to produce the required result, but should work on most Fortran 90 compilers.

    NXi1 - one-byte integers
    NXi2 - two-byte integers
    NXi4 - four-byte integers
    NXr4 - four-byte floating points
    NXr8 - eight-byte floating points (double precision)
    
There is no way of distinguishing signed and unsigned integers, so unsigned integers are mapped to signed integers of the same length.  It is possible to read variables into arrays of different storage size, provided there is no overflow.

--- Running the Examples ---

You will need to get copies of the HDF (Hierarchical Data Format)
libraries approriate for your operating system. These can be obtained from: 

    http://hdf.ncsa.uiuc.edu/

The default installation is to put the C header files into
/usr/local/hdf/include and the libraries into /usr/local/hdf/lib

*** Running C interface test ***

cc -c -I/usr/local/hdf/include napi.c
cc -c -I/usr/local/hdf/include napi_test.c
cc -o napi_test napi_test.o napi.o -L/usr/local/hdf/lib -lmfhdf -ldf -lz

./napi_test

*** Running Fortran 90 interface test ***

cc -c -I/usr/local/hdf/include napi.c
f90 -c NXmodule.f90 
f90 -c NXtest.f90
f90 -o NXtest NXtest.o NXmodule.o napi.o -L/usr/local/hdf/lib -lmfhdf -ldf -lz

./NXtest

The Fortran 90 program should print the following:

ch_data : NX_CHAR
Values : NeXus data
i1_data : NX_INT8
Values : 1 2 3 4
i2_data : NX_INT16
Values : 1000 2000 3000 4000
i4_data : NX_INT32
Values : 1000000 2000000 3000000 4000000
r4_data : NX_FLOAT32
Values : 1.000000 2.000000 3.000000 4.000000
       : 5.000000 6.000000 7.000000 8.000000
       : 9.000000 10.000000 11.000000 12.000000
       : 13.000000 14.000000 15.000000 16.000000
       : 17.000000 18.000000 19.000000 20.000000
r8_data : NX_FLOAT64
Values : 1.000000 2.000000 3.000000 4.000000
       : 5.000000 6.000000 7.000000 8.000000
       : 9.000000 10.000000 11.000000 12.000000
       : 13.000000 14.000000 15.000000 16.000000
       : 17.000000 18.000000 19.000000 20.000000
ch_attribute : NeXus
i4_attribute : 42
r4_attribute : 3.141593

A file called "NXtest.nxs" is also created. The test program NXtest.f90 performs exactly the same operations as NAPIF_TEST.F (see README.FORTRAN).



*** Cross-checking the interfaces ***

To check that the Fortran 90 interface produces an equivalent file to the 
C interface, use "napi_test_read.c" to read the Fortran-generated file 
"NXtest.nxs".

cc -c -I/usr/local/hdf/include napi_test_read.c
cc -o napi_test_read napi_test_read.o napi.o -L/usr/local/hdf/lib -lmfhdf -ldf -lz

./napi_test_read

This produces the same output as the other test programs.

--
Ray Osborn
Materials Science Division
Argonne National Laboratory
Argonne, IL 60439-4845, USA

Email: ROsborn@anl.gov

$Id$
