The NAPI FORTRAN interface consists of wrapper routines (napif.f) and
an include file of definitions (napif.inc). The routines are called
exactly like their C counterparts, but the setup for NXHandle
and NXlink structures is done slightly differently (see napif_test.f)

For a NXhandle, you use:

    INTEGER FILEID(NXFILESIZE)

And for an NXlink

    INTEGER LINK(NXLINKSIZE)

The two test programs perform exactly the same operations, but one is in
C and the other FORTRAN

*** Running C interface test ***

cc -c -I/usr/local/hdf/include napi.c
cc -c -I/usr/local/hdf/include napi_test.c
cc -o napi_test napi_test.o napi.o -lmfhdf -ldf -lz
./napi_test

*** Running FORTRAN interface test ***

cc -c -I/usr/local/hdf/include napi.c
f77 -c napif.f 
f77 -c napif_test.f
f77 -o napif_test napif_test.o napif.o napi.o -lmfhdf -ldf -lz

Both these test programs should print 

    1.000000
    2.000000
    3.000000
    4.000000
    Attribute: something

To the screen and create a file "nxtest.dat"

They have only been tested on Digital UNIX, but i hope they would
work on others.

*** C Interface Notes ***

I had to make the following changes to the C interface to allow FORTRAN calls:

- NXopen takes a pointer to a NexusFile structure, and returns a NXstatus
- NXgetgroupID, NXgetdataID and NXmakelink take pointers to NXlink structures and return NXstatus

Also

- Addition of NXmalloc and NXfree for convenience
- Minor changes to make napi.c C++ clean (rename of use of "class" as a string, add extern "C" etc)

*** FORTRAN Interface Notes ***

- All attributes are considered to be strings at the moment

*** CHANGELOG ***

30/7/97 Initial release
31/7/97 Correct NXPUTATTR/NXGETATTR and add in declarations for "implicit none" compiling

--
Freddie Akeroyd
ISIS Facility
Rutherford Appleton Laboratory
Chilton, Didcot, OX11 OQX, GB

Email: Freddie.Akeroyd@rl.ac.uk
