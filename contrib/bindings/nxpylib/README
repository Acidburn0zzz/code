
--------------------------------------------------------------------------------------
								nxpylib
  a set of python classes that simplifies reading, writing and maintaining nexus files
---------------------------------------------------------------------------------------


Introduction
============

nxpylib represents a convenience tool for scientists who want to store their scanned data from neutron scattering experiments directly into a NeXus file in a simple manner.

nxpylib presents itself in a kind of object-oriented fashion and treats every entry and any piece of data in a nexus file as an object. As a consequence it has to implement a mapping of the state-dependant iteration mechanism of the NeXus API into something more manageable and object like when handling with NeXus components.

the main goals of nxpylib are:
------------------------------
1) hide the extensive and recurring NAPI function calling sequence required for any write and read process in NeXus files from the python programmer.

2) validate the data that is read and written into the HDF file against the Nexus specification
and provide an easy to use interface that only allows the creation of well-formed and spec-compliant Nexus-files.

3) Facilitate and guarantee the persistent storage of scanned data and provide means of recovering in case of errors and interruptions


Moreover the generation of instrument specific validation mechanisms and the automatic creation of validating structures out of the metaDTD format should be covered in future versions of nxpylib.



Installation Instructions
=========================
in order to get nxpylib running, you need:
- the hdf libraries and the 3rdparty librarys hdf relies on (szip, zlib, jpeg)
- a recent copy of the nexus cvs sources
- a recent version of swig (1.3.21 should suffice)
- libxml2 (only needed for the creation of the )

if you got all components installed jump to the contrib/bindings/nxpylib directory and type 

./setup.py install 

this should automatically create and install the nxpylib classes 
into the python 3rdparty modules directory. 
starting the python interpreter, nxpylib can be made available by typing

from nxfile import *

For a short introduction on how to use nxpylib take a look at the nxtest.py found in the 
same directory. it exemplary shows some typical use cases when dealing with NeXus files.


Architecture
============
to be completed ...


Generation
==========
to be completed ...


Validation
==========
to be completed ...


Maintainance
============
to be completed ...




